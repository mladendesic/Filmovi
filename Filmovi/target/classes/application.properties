
# ===============================
# = DATA SOURCE
# prve tri linije su odesavanja za data source url treba promeniti na:                                                                                                               # localhost
# ===============================
spring.datasource.url=jdbc:mysql://localhost:3306/vezbemodul3
spring.datasource.username=root
spring.datasource.password=root

# ===============================
# = JPA / HIBERNATE

# ===============================

# Prikazuj SQL upite koje JPA generise

spring.jpa.show-sql = true

# posto je postavljeno na true spring ce u konzoli ispisivati sql naredbe    
# koje generise na osnovu naseg mapiranja
# Hibernate ddl-auto: 
#	validate: validate the schema, makes no changes to the database.
#	update: update the schema.
#	create: creates the schema, destroying previous data.
#	create-drop: drop the schema at the end of the session.
# ddl je data definition language(jezik za definiciju structure seme baze 
# Sql u sebi sadrzi i ddl naredbe. Ovo podesavanje nam omogucava da ukljucimo   
# mehanizam Hibrnate koji na osnovu naseg objektnog modela automatski        
# napravi semu baze modela(pitanje je sta raditi sa podacima kada se objektni 
# model izmeni- hibernate moze da azurira semu baze podataka ali ne sme mu se 
# dozvoliti da to radi ukoliko su u bazi neki bitni podaci zbog toga se i   
# podesava ovo ispod na validate(hibernate ce proveriti da li na tu semu moze 
# da se mapira nas objektni model)update ce pokusati da updatuje semu a da   
# ostavi podatke onakve kakvi su create ce ponovo kreirati bazu ali ce      
# obrisati podatke a create drop ce jos dropovati bazu na kraju svake sesije.
# update, create i create-drop su zgodni za razvoj aplikacije ali kada aplikacija krene u produkciju
# kada u bazi imaju bitni podaci onda moze samo validate.

spring.jpa.hibernate.ddl-auto = create

# ovim podesavanjem se prilagodjavaju SQL naredbe bazi koju trenutno koristimo
spring.jpa.properties.hibernate.dialect = org.hibernate.dialect.MySQL5Dialect

spring.jpa.properties.connection.CharSet=utf8
spring.jpa.properties.connection.characterEncoding=utf8
spring.jpa.properties.hibernate.connection.useUnicode=true
